import{Text as s}from"../../../_snowpack/pkg/adwaita-web.js";import c from"../../../_snowpack/pkg/clsx.js";import a from"../../../_snowpack/pkg/path-browserify.js";import i from"../../../_snowpack/pkg/react.js";import{REPO_NAME as o,REPO_OWNER as l}from"../../../adapters/github/constants.js";import{githubRepo as m}from"../../../quarks/github-repo/github-repo.js";import{Link as u}from"../../link/link.js";export const TextViewer=t=>{const n=c({bolded:t.text.isBold,italic:t.text.isItalic,striked:t.text.isStrike,"code-quote":t.text.isCode}),r=()=>{if(t.text.isLink&&t.text.linkHref){const e=x(t.text.linkHref);return e.isExternal?i.createElement("a",{href:e.href},t.text.value):i.createElement(u,{to:e.href,preserveQuery:!0},t.text.value)}return t.text.value};if(t.text.header!==void 0){const e=`h${t.text.header}`;return i.createElement(e,{className:n},r())}return t.isPartOfGroup?i.createElement("span",{className:n},r()):i.createElement(s,{className:n},r())};const x=t=>{if(t.startsWith("http"))return{href:t,isExternal:!0};const n=`https://github.com/${l}/${o}/tree/${m.get().currentBranch}`,r=t.match(/^\.\/([a-zA-Z0-9]+)\.md$/);if(r&&r[1])return{href:`/${r[1]}`,isExternal:!1};if(t.startsWith(".")){const e=a.join("/docs",t);return{href:`${n}${e}`,isExternal:!0}}if(t.startsWith("/")){const e=a.join("/",t);return{href:`${n}${e}`,isExternal:!0}}return{href:t,isExternal:!0}};
